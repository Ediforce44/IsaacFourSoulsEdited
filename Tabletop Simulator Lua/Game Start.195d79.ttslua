CHARACTER_PLACER_GUID = "d2c68a"
FLOOR_CHANGE_GUID = "69a80d"

PLAYER_COLORS = {'Red', 'Blue', 'Yellow', 'Green'}

--- Edited by Ediforce44
ZONE_GUIDS_DECK = Global.getTable("ZONE_GUID_DECK")
MONSTER_DECK_ZONE_GUID = ZONE_GUIDS_DECK.MONSTER
HAPPEN_DECK_ZONE_GUID = ZONE_GUIDS_DECK.HAPPEN
TREASURE_DECK_ZONE_GUID = ZONE_GUIDS_DECK.TREASURE
LOOT_DECK_ZONE_GUID = ZONE_GUIDS_DECK.LOOT
SOUL_DECK_ZONE_GUID = ZONE_GUIDS_DECK.BONUS_SOUL
ROOM_DECK_ZONE_GUID = ZONE_GUIDS_DECK.ROOM

SETTING_UP_NOTE_GUID = "56a44e"

------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------- Deck Builder -------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
local DUMMY_CARDS = {
    TREASURE = {"", ""},
    LOOT = {"fc7f84", "d8bf8b"},
    MONSTER = {"6f7d81", "ad45a5"}
}

local DECK_BUILDER_MODE = {
    NORMAL  = 1,
    DRAFT   = 2
}

local DECK_TREASURE = {
    ACTIVE  = {40, 40},
    PASSIVE = {44, 44},
    PAID    = {10, 10},
    ONE_USE = {5, 5},
    SOUL    = {1, 1}
}

local DECK_LOOT = {
    L_TAROT_MISC    = {23, 22},
    L_TRINKET       = {11, 10},
    L_PILL          = {3, 2},
    L_RUNE          = {3, 3},
    L_BUTTER_BEAN   = {5, 5},
    L_BOMB          = {6, 5},
    L_BATTERY       = {6, 5},
    L_DICE_SHARD    = {3, 3},
    L_SOUL_HEART    = {2, 2},
    L_LOST_SOUL     = {1, 1},
    L_NICKEL        = {6, 5},
    L_FOUR_CENT     = {12, 10},
    L_THREE_CENT    = {11, 10},
    L_TWO_CENT      = {6, 5},
    L_ONE_CENT      = {2, 2}
}

local DECK_MONSTER = {
    EPIC        = {1, 1},
    BOSS        = {30, 30},
    BASIC       = {30, 30},
    CURSED      = {9, 9},
    HOLY_CHARMED= {9, 9},
    GOOD        = {8, 8},
    BAD         = {8, 8},
    CURSES      = {5, 5}
}

local function setUpLUT(deck)
    local lookUpTable = {}
    for _, card in pairs(deck.getObjects()) do
        local insertTag = "EMPTY"
        if not (card.tags == {}) then
            insertTag = card.tags[1]
        end
        if lookUpTable[insertTag] == nil then
            lookUpTable[insertTag] = {}
        end
        table.insert(lookUpTable[insertTag], card.guid)
    end
    return lookUpTable
end

local function getDummyDeck(deckZone)
    local dummyDeck = nil
    for _, obj in ipairs(deckZone.getObjects()) do
        if obj.name == "Deck" then
            dummyDeck = obj
            break
        end
    end
    return dummyDeck
end

local function buildTreasureDeck()
    treasureDeck = treasureCards
    return
end

local function buildLootDeck(mode)
    local lookUpTable = setUpLUT(lootCards)
    local dummyLootDeck = getDummyDeck(getObjectFromGUID(Global.getTable("ZONE_GUID_DECK").LOOT))
    if dummyLootDeck == nil then
        lootCards.setPositionSmooth(Global.getTable("DECK_POSITION").LOOT, false)
        lootCards.setRotationSmooth({180, 0, 0}, false)
        lootDeck = lootCards
        return
    end
    lootDeck = getObjectFromGUID(dummyLootDeck.guid)
    for type, amountTable in pairs(DECK_LOOT) do
        for i = 1, amountTable[mode] do
            lootDeck.putObject(lootCards.takeObject({guid = lookUpTable[type][i]}))
        end
    end
    for _, dummyGUID in ipairs(DUMMY_CARDS.LOOT) do
        destroyObject(lootDeck.takeObject({guid = dummyGUID}))
    end
end

local function buildMonsterDeck()
    monsterDeck = monsterCards
    return
end

local function buildDecks()
    buildTreasureDeck()
    buildLootDeck(DECK_BUILDER_MODE.NORMAL)
    buildMonsterDeck()
end

------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------

local function setupPlayingArea()
    -- Edited by Ediforce44
    -- Init Monster Zones and Monster Buttons
    local monsterZoneGUIDs = Global.getTable("ZONE_GUID_MONSTER")
    getObjectFromGUID(monsterZoneGUIDs.ONE).call("activateZone")
    getObjectFromGUID(monsterZoneGUIDs.TWO).call("activateZone")
    getObjectFromGUID(monsterZoneGUIDs.THREE).call("deactivateZone")
    getObjectFromGUID(monsterZoneGUIDs.FOUR).call("deactivateZone")
    getObjectFromGUID(monsterZoneGUIDs.FIVE).call("deactivateZone")
    getObjectFromGUID(monsterZoneGUIDs.SIX).call("deactivateZone")
    getObjectFromGUID(monsterZoneGUIDs.SEVEN).call("deactivateZone")
    getObjectFromGUID(MONSTER_DECK_ZONE_GUID).call("activateChooseButton")

    -- Init Shop Zones and Shop Buttons
    local shopZoneGUIDs = Global.getTable("ZONE_GUID_SHOP")
    getObjectFromGUID(shopZoneGUIDs.ONE).call("activateZone")
    getObjectFromGUID(shopZoneGUIDs.TWO).call("activateZone")
    getObjectFromGUID(shopZoneGUIDs.THREE).call("deactivateZone")
    getObjectFromGUID(shopZoneGUIDs.FOUR).call("deactivateZone")
    getObjectFromGUID(shopZoneGUIDs.FIVE).call("deactivateZone")
    getObjectFromGUID(shopZoneGUIDs.SIX).call("deactivateZone")
    getObjectFromGUID(TREASURE_DECK_ZONE_GUID).call("activateShopButton")

    -- Init Room Zones and Room Buttons
    local roomZoneGUIDs = Global.getTable("ZONE_GUID_ROOM")
    getObjectFromGUID(roomZoneGUIDs.ONE).call("activateZone")
    getObjectFromGUID(roomZoneGUIDs.TWO).call("deactivateZone")

    local bonusSoulZones = Global.getTable("ZONE_GUID_BONUSSOUL")
    soulDeck.takeObject({position=getObjectFromGUID(bonusSoulZones.ONE).getPosition(), flip=true})
    soulDeck.takeObject({position=getObjectFromGUID(bonusSoulZones.TWO).getPosition(), flip=true})
    soulDeck.takeObject({position=getObjectFromGUID(bonusSoulZones.THREE).getPosition(), flip=true})
end

function onLoad()
    self.createButton({
    click_function = "onStart",
    label = "Start",
    tooltip = "Click here to start!",
    function_owner = self,
    position = {0, 0.11, -1},
    rotation = {0, 0, 0},
    width = 1100,
    height = 500,
    font_size = 400
})
end

function shuffleOptions(array)

    local output = { }
    local random = math.random

    for index = 1, #array do
        local offset = index - 1
        local value = array[index]
        local randomIndex = offset*random()
        local flooredIndex = randomIndex - randomIndex%1

        if flooredIndex == offset then
            output[#output + 1] = value
        else
            output[#output + 1] = output[flooredIndex + 1]
            output[flooredIndex + 1] = value
        end
    end

    return output
end

function onStart()
    local isAllReady = isAllPlayersSelectCharacter()
    if isAllReady == false or isAllReady == nil then
        printToAll("[fdd835][WARNING][-] Each player must take a character before start.")
        return
    end

    loadDecks()

    cardShuffle() --use shuffle as randomizer for the deck builder ;)

    Wait.frames(function()
            buildDecks()

            deckShuffle()

            lootDeck.deal(3)

            setupPlayingArea()

            --[[
            if happenDeck ~= nil then
                monsterDeck.putObject(happenDeck)
                happenDeck.setPosition({30.74, 2.04, 0.09})
            end

            monsterDeck.shuffle()
            --]]

            for _, color in pairs(getSeatedPlayers()) do
                Global.call("deactivateCharacter", {playerColor = color})
            end

            -- INSERT other setup steps

            self.editButton({
                index = 0,
                click_function = "dummy",
                label = "",
                tooltip = "",
                width = 0,
                height = 0,
                font_size = 0
            })

            if getObjectFromGUID(SETTING_UP_NOTE_GUID) ~= nil then
                settingUpNote = getObjectFromGUID(SETTING_UP_NOTE_GUID)
                destroyObject(settingUpNote)
            end

            Turns.enable = true
            Turns.type = 1
            local startPlayerColor = Global.getVar("startPlayerColor")
            if startPlayerColor ~= "None" then
                Turns.turn_color = startPlayerColor
            end

            self.destroy()
        end, 1)
end

function loadDecks()
    for _, obj in ipairs(getObjectsWithTag("Deck")) do
        if obj.getName() == "LOOT_CARDS" then
            lootCards = obj
            lootDeck = nil
        elseif obj.getName() == "TREASURE_CARDS" then
            treasureCards = obj
            treasureDeck = nil
        elseif obj.getName() == "MONSTER_CARDS" then
            monsterCards = obj
            monsterDeck = nil
        elseif obj.getName() == "ROOM_CARDS" then
            roomCards = obj
            roomDeck = obj
        elseif obj.getName() == "BONUS_SOUL_CARDS" then
            soulCards = obj
            soulDeck = obj
        end
    end
end

function isAllPlayersSelectCharacter()
    local characterPlacerObj = getObjectFromGUID(CHARACTER_PLACER_GUID)
    local playersSpawnedCharacterObj = characterPlacerObj.getTable("playersSpawnedCharacterObj")
    local selectedCharacterCount = 0
    for _, pObjs in pairs(playersSpawnedCharacterObj) do
        if #pObjs > 0 then
            selectedCharacterCount = selectedCharacterCount + 1
        end
    end

    return selectedCharacterCount == getPlayersCount()
end

function getPlayersCount()
  local counter = 0
  for _, player in pairs(Player.getPlayers()) do
    for _, color in pairs(PLAYER_COLORS) do
      if player.color == color then
        counter = counter + 1
      end
    end
  end
  return counter
end

function cardShuffle()
    local index = 1
    local decksToShuffle = {}
    if monsterCards ~= nil then
      decksToShuffle[index] = monsterCards
      index = index + 1
    end
    --if happenDeck ~= nil then
    --  decksToShuffle[index] = happenDeck
    --  index = index + 1
    --end
    if soulCards ~= nil then
      decksToShuffle[index] = soulCards
      index = index + 1
    end
    if treasureCards ~= nil then
      decksToShuffle[index] = treasureCards
      index = index + 1
    end
    if lootCards ~= nil then
      decksToShuffle[index] = lootCards
      index = index + 1
    end
    if roomCards ~= nil then
      decksToShuffle[index] = roomCards
      index = index + 1
    end

    for i = 1, #decksToShuffle, 1 do
        obj = decksToShuffle[i]
        if obj ~= nil then
            obj.shuffle()
        end
    end
end

function deckShuffle()
    local index = 1
    local decksToShuffle = {}
    if monsterDeck ~= nil then
      decksToShuffle[index] = monsterDeck
      index = index + 1
    end
    --if happenDeck ~= nil then
    --  decksToShuffle[index] = happenDeck
    --  index = index + 1
    --end
    if soulDeck ~= nil then
      decksToShuffle[index] = soulDeck
      index = index + 1
    end
    if treasureDeck ~= nil then
      decksToShuffle[index] = treasureDeck
      index = index + 1
    end
    if lootDeck ~= nil then
      decksToShuffle[index] = lootDeck
      index = index + 1
    end
    if roomDeck ~= nil then
      decksToShuffle[index] = roomDeck
      index = index + 1
    end

    for i = 1, #decksToShuffle, 1 do
        obj = decksToShuffle[i]
        if obj ~= nil then
            obj.shuffle()
        end
    end
end

function dummy()
end