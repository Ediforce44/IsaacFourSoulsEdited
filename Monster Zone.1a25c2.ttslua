--- Written by Ediforce44
ATTACK_BUTTON_STATES = {INACTIVE = "Inactive", ATTACK = "Attack", CHOOSE = "This Zone"}
ATTACK_BUTTON_INDEX = 0
ACTIVE = true

local function placeNewMonsterCard()
    local newMonsterCard = Global.call("getCardFromDeck", {deck = Global.call("getMonsterDeck")})
    if newMonsterCard ~= nil then
        newMonsterCard.flip()
        newMonsterCard.setPositionSmooth({self.getPosition().x, 5, self.getPosition().z}, false)
        return true
    end
    return false
end

local function getAttackButton()
    return self.getButtons()[ATTACK_BUTTON_INDEX + 1]
end

function onLoad()
    -- Attack button
    self.createButton({
        click_function = "click_function",
        function_owner = self,
        label          = "Attack",
        position       = {0, -0.5, 3},
        width          = 1000,
        height         = 300,
        font_size      = 200,
        color          = {0.2, 0.157, 0.325},
        font_color     = {1, 1, 1}
    })
end

function click_function(_, color)
    if Global.getVar("activePlayerColor") == color then
        local attackButton = getAttackButton()
        if attackButton.label == ATTACK_BUTTON_STATES.INACTIVE then
            return
        elseif attackButton.label == ATTACK_BUTTON_STATES.ATTACK then
            --TODO
        elseif attackButton.label == ATTACK_BUTTON_STATES.CHOOSE then
            if placeNewMonsterCard() then
                self.editButton({index = ATTACK_BUTTON_INDEX, label = ATTACK_BUTTON_STATES.ATTACK})
                getObjectFromGUID(Global.getTable("ZONE_GUID_DECK").MONSTER).call("zoneChosen")
            end
        else
            printToAll("[fdd835][WARNING][-] Unknown monster button state: " .. tostring(attackButton.label) .. ".")
        end
    end
end

function activateZone()
    local attackButton = getAttackButton()
    if attackButton.label ~= ATTACK_BUTTON_STATES.INACTIVE then
        printToAll("[fdd835][WARNING][-] Can't activate Zone: " .. self.guid .. ". This Zone is already active.")
    else
        if placeNewMonsterCard() then
            self.editButton({index = ATTACK_BUTTON_INDEX, label = ATTACK_BUTTON_STATES.ATTACK})
            ACTIVE = true
        end
    end
end

function deactivateZone()
    local deck = Global.call("getDeckFromZone", {zoneGUID = self.guid})
    if deck ~= nil then
        deck.setPositionSmooth(Global.getTable("DISCARD_PILE_POSITION").MONSTER)
    end
    local attackButton = getAttackButton()
    self.editButton({inedx = ATTACK_BUTTON_INDEX, label = ATTACK_BUTTON_STATES.INACTIVE})
    ACTIVE = false
end

function changeButtonState(params)
    if params.newState == nil then
        printToAll("[fdd835][WARNING][-] Wrong parameters in global function 'changeButtonState()'.")
    else
        for _ , state in pairs(ATTACK_BUTTON_STATES) do
            if params.newState == state then
                self.editButton({index = ATTACK_BUTTON_INDEX, label = params.newState})
                return true
            end
        end
    end
    return false
end