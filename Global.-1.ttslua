------------------------------------------------------------------------------------------------------------------------
--------------------------------------------- Edited by Ediforce44 -----------------------------------------------------
------------------------------------------------ local functions -------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
local function getDeckOrCard(zoneGUID)
    local zone = getObjectFromGUID(zoneGUID)
    if zone == nil then
        printToAll("[fdd835][WARNING][-] Wrong Zone. Zone with GUID '" .. zoneGUID .. "' doesn't exist.")
        return nil
    end

    for _, obj in pairs(zone.getObjects()) do
      if obj.tag == "Deck" or obj.tag == "Card" then
          return obj
      end
    end
    --Can't find a Deck or Card in the zone
    local zoneName = ""
    for name, guid in pairs(ZONE_GUID_DECK) do
        if guid == zoneGUID then
            zoneName = tostring(name)
            goto printError
        end
    end
    zoneName = "'Zone is not a Deck-Zone'"
    ::printError::
    printToAll("[fdd835][WARNING][-] Can't find the deck or card in zone: " .. zoneName .. ".")
    return nil
end
------------------------------------------------------------------------------------------------------------------------

function onLoad(saved_data)         --EbyE44
    if saved_data ~= "" then
        local loaded_data = JSON.decode(saved_data)
        if loaded_data[1] then
            activePlayerColor = loaded_data[1]
        end
        if loaded_data[2] then
            automaticRewarding.Yellow = loaded_data[2].Yellow and true
            automaticRewarding.Green = loaded_data[2].Green and true
            automaticRewarding.Blue = loaded_data[2].Blue and true
            automaticRewarding.Red = loaded_data[2].Red and true
        end
    end
    broadcastToAll("The Binding of Isaac: Four Souls - FULL loaded.", {1,1,1})
end

function onSave()                   --EbyE44
    return JSON.encode({activePlayerColor, automaticRewarding})
end

-- Auto monster HP reset
FIRST_HEARTS_GUID = {
  -- Blue player hearts
  "78f8e7",
   -- Red player hearts
  "bcabf3",
  -- Yellow player hearts
  "c02908",
  -- Green player hearts
  "12326f"
}

SECOND_HEARTS_GUID = {
  -- Blue player hearts
  "c9f7b2",
   -- Red player hearts
  "ca5135",
  -- Yellow player hearts
  "3f81b7",
  -- Green player hearts
  "c326f1"
}

function onPlayerTurn(player, previous_player)
    activePlayerColor = player.color
    local lootdeck = getDeckOrCard(ZONE_GUID_DECK.LOOT)

    if previous_player == nil then
        print(getPlayerString({playerColor = player.color}) .. " is going first. It's now their turn.")
        lootdeck.deal(1, Turns.turn_color)
        previous_player = player
        previous_player.color = player.color
    else
        print(getPlayerString({playerColor = previous_player.color}) .. "'s turn is over. It's now "
                .. getPlayerString({playerColor = player.color}) .. "'s turn.")
        lootdeck.deal(1, Turns.turn_color)
    end

    -- Monster HP

    if (getObjectFromGUID("9bb226").getVar("val") == 0) then
        getObjectFromGUID("9bb226").call("reset")
    end
    getObjectFromGUID("a75691").call("reset")
    getObjectFromGUID("fab592").call("reset")
    getObjectFromGUID("fb5299").call("reset")
    getObjectFromGUID("b50db5").call("reset")
    getObjectFromGUID("bcac8d").call("reset")

    -- Players HP
   for i, guid in pairs(FIRST_HEARTS_GUID) do
     local objFirst = getObjectFromGUID(guid)
     local isHeartActive = objFirst.getVar("isActive")
     if isHeartActive ~= nil and isHeartActive == false then
       local objSecond = getObjectFromGUID(SECOND_HEARTS_GUID[i])
       objSecond.call("onPickUp")
     end
   end
end

------------------------------------------------------------------------------------------------------------------------
--------------------------------------------- Edited by Ediforce44 -----------------------------------------------------
----------------------------------------------- global functions -------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
activePlayerColor = "Red"

automaticRewarding = {
    Yellow = true,
    Green = true,
    Blue = true,
    Red = true
}

CLICK_DELAY = 0.3

function table.copy(t)
    local tableCopy = {}
    for key, value in pairs(t) do
        tableCopy[key] = value
    end
    return tableCopy
end

REAL_PLAYER_COLOR = {
    Yellow = "[D0E431]",
    Green = "[2BB837]",
    Blue = "[1C79F8]",
    Red = "[C60A00]"
}

REAL_PLAYER_COLOR_RGB = {
    Yellow = {208/255, 228/255, 49/255},
    Green = {43/255, 184/255, 55/255},
    Blue = {28/255, 121/255, 248/255},
    Red = {198/255, 10/255, 0/255}
}

PRINT_COLOR_PLAYER = {
    YELLOW = REAL_PLAYER_COLOR["Yellow"],
    GREEN = REAL_PLAYER_COLOR["Green"],
    BLUE = REAL_PLAYER_COLOR["Blue"],
    RED = REAL_PLAYER_COLOR["Red"]
}

PRINT_COLOR_SPECIAL = {
    WARNING = "[fdd835]",
    SOUL = "[C8EFF7]",
    MONSTER = "[352853]",
    COIN = "[AB9023]",
    LOOT = "[B9E9F0]",
    FLOOR = "[5E4C3F]",
    TREASURE_LIGHT = "[D6BF5C]",
    TREASURE_DARK = "[998126]",
    HP = "[951312]",
    BLACK = "[010100]",
    GRAY = "[3B4449]",
    RED = "[CE3522]",
    GOLD = "[E4BC2F]"
}

ZONE_GUID_DECK = {
    TREASURE = "190cda",
    FLOOR = "096e94",
    LOOT = "c413a5",
    MONSTER = "52e22c",
    HAPPEN = "61e7b7",
    BONUS_SOUL = "979776",
    SOUL_TOKEN = "560abc"
}

ZONE_GUID_MONSTER = {
    ONE = "329a95",
    TWO = "1a25c2",
    THREE = "27417f",
    FOUR = "f0d9fd",
    FIVE = "839d81",
    SIX = "6c1a32"
}

ZONE_GUID_SOUL = {
    Yellow = "92610d",
    Green = "f95f84",
    Blue = "c0bd67",
    Red = "8515c8"
}

COIN_COUNTER_GUID = {
    Yellow = "9d76db",
    Green = "c46653",
    Blue = "8edf63",
    Red = "965140"
}

HEART_TOKENS_GUID = {
    Yellow = {"c02908", "3f81b7", "f8e991", "f825c2", "2a9dfc", "443adb"},
    Green = {"12326f", "c326f1", "f5d095", "7e882b", "66804c", "e24915"},
    Blue = {"78f8e7", "c9f7b2", "4b26ea", "098303", "9e8aa0", "dbcc87"},
    Red = {"bcabf3", "ca5135", "0a7171", "33bf0c", "159680", "c7837a"}
}

MONSTER_HP_COUNTER_GUID = {
    ONE = "9bb226",
    TWO = "a75691",
    THREE = "fab592",
    FOUR = "fb5299",
    FIVE = "b50db5",
    SIX = "bcac8d"
}

DISCARD_PILE_POSITION = {
    TREASURE = {-33.91, 2.53, 0},
    FLOOR = {-6.20, 1.89, -1.70},
    LOOT = {1.64, 2.53, 0},
    MONSTER = {34.06, 5, 0}
}

function getPlayerString(params)
    local playerString = "'Player not Found'"
    if params.playerColor ~= nil then
        playerString = REAL_PLAYER_COLOR[params.playerColor]
        if playerString == nil then
            playerString = ""
        end
        playerString = playerString .. params.playerColor .. "[-]"
    end
    return playerString
end

function getActivePlayerString()
    return getPlayerString({playerColor = activePlayerColor})
end

function isPlayerAuthorized(params)
    -- If there is no owner, all players have the permission to interact with something
    if params.ownerPlayer == nil then
        return true
    end
    -- Interacting player has to be the owner or has to be an admin
    local player = nil
    if params.playerColor ~= nil then
        player = Player[params.playerColor]
    elseif params.player ~= nil then
        player = params.player
    else
        printToAll("[fdd835][WARNING][-] Wrong parameters in global function 'isPlayerAuthorized()'.")
        return false
    end
    return player == params.ownerPlayer or player.admin
end

function switchRewardingMode(params)
    local color = ""
    if params.playerColor == nil then
        if params.player == nil then
            printToAll("[fdd835][WARNING][-] Wrong parameters in global function 'deactivateRewarding()'.")
            return
        else
            color = params.player.color
        end
    else
        color = params.playerColor
    end
    local newValue = not automaticRewarding[color]
    automaticRewarding[color] = newValue
    getObjectFromGUID(ZONE_GUID_SOUL[color]).call("onSwitchingRewardingMode", {newState = newValue})
end

--Thank you Bone White in discord for this <3       --Edited by Ediforce44
function findIntInScript(params)
    if params.scriptString == nil or params.varName then
        printToAll("[fdd835][WARNING][-] Wrong parameters in global function 'findIntInScript()'.")
        return nil
    end
    for line in string.gmatch(scriptString,"[^\r\n]+") do -- for each line in the script
        if string.sub(line,1,#varName) == varName then -- if the beginning of the line matches var
            local value = string.match(line,"%d+",#varName) -- get the first number listed in that line after the var name
            return tonumber(value)
        end
    end
    return nil
end

function getDeckFromZone(params)
    if params.zoneGUID == nil then
        printToAll("[fdd835][WARNING][-] Wrong parameters in global function 'getDeckFromZone()'.")
        return nil
    end
    return getDeckOrCard(params.zoneGUID)
end

function getMonsterDeck()
    return getDeckOrCard(ZONE_GUID_DECK.MONSTER)
end

function getHappenDeck()
    return getDeckOrCard(ZONE_GUID_DECK.HAPPEN)
end

function getTreasureDeck()
    return getDeckOrCard(ZONE_GUID_DECK.TREASURE)
end

function getLootDeck()
    return getDeckOrCard(ZONE_GUID_DECK.LOOT)
end

function getBonusSoulDeck()
    return getDeckOrCard(ZONE_GUID_DECK.BONUS_SOUL)
end

function getFloorDeck()
    return getDeckOrCard(ZONE_GUID_DECK.FLOOR)
end

function getSoulTokenDeck()
    return getDeckOrCard(ZONE_GUID_DECK.SOUL_TOKEN)
end

function getCardFromDeck(params)
    if params.deck == nil then
        printToAll("[fdd835][WARNING][-] Wrong parameters in global function 'getCardFromDeck()'.")
        return nil
    end
    local obj = params.deck
    local card = nil
    if obj.tag == "Deck" then
        card = obj.takeObject()
    elseif obj.tag == "Card" then
        card = obj
    end
    return card
end

function placeSoulToken(params)
    if params.ownerColor == nil then
        printToAll("[fdd835][WARNING][-] Wrong parameters in global function 'placeSoulToken()'.")
    end
    local soulToken = getCardFromDeck({deck = getSoulTokenDeck()})
    if soulToken ~= nil then
        local soulZoneGUID = ZONE_GUID_SOUL[params.ownerColor]
        if soulZoneGUID ~= nil then
            if not getObjectFromGUID(soulZoneGUID).call("placeCardInSoulZone", {card = soulToken}) then
                soulToken.setPosition(getSoulTokenDeck().getPosition())
            end
        else
            broadcastToAll(PRINT_COLOR_SPECIAL.SOUL .. "Nobody earned a soul. Hurray???")
            printToAll("[fdd835][WARNING][-] '" .. tostring(params.ownerColor) .. "' isn't a player color.")
        end
    else
        printToAll("[fdd835][WARNING][-] Can't find the Soul Token deck: Maybe the soul tokens are empty. " ..
                    "Place the soul tokens on its starting position.")
    end
end
------------------------------------------------------------------------------------------------------------------------